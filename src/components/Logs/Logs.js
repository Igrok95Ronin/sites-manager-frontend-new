import React, { useState, useEffect } from 'react';
import axiosInstance from '../../axiosInstance'; // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä Axios
import { Virtuoso } from 'react-virtuoso';
import Paper from '@mui/material/Paper';
import Table from '@mui/material/Table';
import TableBody from '@mui/material/TableBody';
import TableCell from '@mui/material/TableCell';
import TableContainer from '@mui/material/TableContainer';
import TableHead from '@mui/material/TableHead';
import TableRow from '@mui/material/TableRow';

import Spinner from '../Spinner/Spinner';

import './Logs.scss';

const APIURL = process.env.REACT_APP_APIURL; // –ü–æ–ª—É—á–µ–º url –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞

// –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞ —Ä–∞–∑
const limit = 100;

const VirtuosoTableComponents = {
  Scroller: React.forwardRef((props, ref) => (
    <TableContainer component={Paper} {...props} ref={ref} />
  )),
  Table: (props) => (
    <Table
      {...props}
      sx={{ borderCollapse: 'separate', tableLayout: 'fixed' }}
    />
  ),
  TableHead: React.forwardRef((props, ref) => (
    <TableHead {...props} ref={ref}>
      {fixedHeaderContent()}
    </TableHead>
  )),
  TableBody: React.forwardRef((props, ref) => (
    <TableBody {...props} ref={ref} />
  )),
  TableRow,
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Ç–∞–±–ª–∏—Ü—ã
function fixedHeaderContent() {
  return (
    <TableRow>
      <TableCell
        variant="head"
        align="left"
        sx={{ backgroundColor: 'background.paper' }}
      >
        Log Entry
      </TableCell>
    </TableRow>
  );
}

// –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≤–∏—Ä—Ç—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã
function ReactVirtualizedTable() {
  const [logs, setLogs] = useState([]); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ª–æ–≥–æ–≤
  const [offset, setOffset] = useState(0); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–º–µ—â–µ–Ω–∏—è
  const [isLoading, setIsLoading] = useState(false); // –§–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ª–æ–≥–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞
  const loadLogs = async () => {
    if (isLoading) return; // –ï—Å–ª–∏ –∏–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
    setIsLoading(true); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏

    try {
      const response = await axiosInstance.get(`${APIURL}/logs`, {
        params: { offset, limit },
      });

      // –£–±–∏—Ä–∞–µ–º –º—É—Å–æ—Ä
      const formattedLogs = response.data.logs.map((logs) =>
        logs.replace('[36m', '').replace('[0m', ' ').replace('[31m', ' ').replace('[33m', ' '),
      );

      setLogs((prevLogs) => [...prevLogs, ...formattedLogs]);
      setOffset(offset + limit);
    } catch (error) {
      console.error('Error fetching logs:', error);
    } finally {
      setIsLoading(false);
    }
  };

  useEffect(() => {
    loadLogs();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  return (
    <section className="logs">
      <div className="container">
        <div className="logs__number">{logs.length}</div>
        <div className="logs__box">
          <Paper className="logs__paper">
            <Virtuoso
              data={logs}
              components={VirtuosoTableComponents}
              itemContent={(_index, log) => (
                <Table>
                  <TableBody>
                    <TableRow
                      className={
                        log.includes('INFO') ? 'logs__info' : 'logs__error'
                      }
                    >
                      <TableCell align="left">
                        <span className="logs__font">{log}</span>
                      </TableCell>
                    </TableRow>
                  </TableBody>
                </Table>
              )}
              endReached={loadLogs}
            />
          </Paper>
          {isLoading && <Spinner loading={isLoading} />}
        </div>
      </div>
    </section>
  );
}

export default ReactVirtualizedTable;
